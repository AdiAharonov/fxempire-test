{"version":3,"sources":["Services/UtilServices.js","Consts.js","Components/Chart/Chart.jsx","Components/Tabs/Tabs.jsx","App.js","index.js"],"names":["formatTimeStamp","timeStamp","Date","toISOString","substr","TimeStamps","Styles","Chart","currTimeStamp","useState","chartData","setChartData","useEffect","precision","period","Axios","get","then","data","getChartData","dataArray","lowArray","highArray","date","high","High","low","Low","getTime","push","x","y","convertToChartData","catch","error","console","log","className","width","window","innerWidth","height","style","stroke","title","fontSize","tickFormat","tickLabelAngle","totalTicks","length","tickSizeOuter","tickPadding","fill","strokeWidth","Tabs","React","memo","setCurrTimeStamp","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAuBaA,EAAkB,SAACC,GAE9B,OADa,IAAIC,KAAKD,GACVE,cAAcC,OAAO,GAAI,ICzB1BC,EACA,UADAA,EAEF,QAGEC,EACH,OADGA,EAEJ,MAFIA,EAGF,Q,eCUEC,EAAQ,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACRC,mBAAS,IADD,mBACnCC,EADmC,KACxBC,EADwB,KAW1C,OARAC,qBAAU,YFnBgB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OACxC,OAAOC,IAAMC,IAAN,+JACmJF,EADnJ,sBACuKD,EADvK,sLAELI,MAAK,qBAAGC,SEiBRC,CAAaX,GACVS,MAAK,SAACC,GAAD,OAAUP,EFfY,SAACS,GACjC,IAD+C,EACzCC,EAAW,GACXC,EAAY,GAF6B,cAGIF,GAHJ,IAG/C,2BAA8D,CAAC,IAAD,UAA3CG,EAA2C,EAAjDrB,KAAkBsB,EAA+B,EAArCC,KAAiBC,EAAoB,EAAzBC,IAC7B1B,EAAY,IAAIC,KAAKqB,GAAMK,UACjCP,EAASQ,KAAK,CAAEC,EAAG7B,EAAW8B,EAAGL,IACjCJ,EAAUO,KAAK,CAAEC,EAAG7B,EAAW8B,EAAGP,KANW,8BAS/C,MAAO,CACLH,WACAC,aEI+BU,CAAmBd,OAC/Ce,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,CAAC1B,IAEJ2B,QAAQC,IAAI1B,GAGV,qBAAK2B,UAAW/B,EAAhB,SACE,eAAC,IAAD,CAAQgC,MAAOC,OAAOC,WAAa,GAAIC,OAAQ,IAA/C,UACE,cAAC,IAAD,CAAqBC,MAAO,CAAEC,OAAQ,aACtC,cAAC,IAAD,CAAmBD,MAAO,CAAEC,OAAQ,aACpC,cAAC,IAAD,CACEC,MAAM,OACNF,MAAO,CACLG,SAAU,QAEZC,WAAY9C,EACZ+C,gBAAiB,GACjBC,WAAYtC,EAAUuC,OACtBC,eAAgB,GAChBC,YAAa,KAEf,cAAC,IAAD,CAAOP,MAAM,UACb,cAAC,IAAD,CACE1B,KAAMR,EAAUW,SAChBqB,MAAO,CACLU,KAAM,OACNT,OAAQ,QACRU,YAAa,SAGjB,cAAC,IAAD,CACEnC,KAAMR,EAAUY,UAChBoB,MAAO,CACLU,KAAM,OACNT,OAAQ,MACRU,YAAa,eCvDZC,G,MAAOC,IAAMC,MAAK,YAA2B,IAAxBC,EAAuB,EAAvBA,iBAChC,OACE,sBAAKpB,UAAW/B,EAAhB,UACE,wBACEoD,QAAS,kBACPD,EAAiB,CAAE3C,OAAQ,EAAGD,UAAWR,KAF7C,sBAOA,wBACEqD,QAAS,kBACPD,EAAiB,CAAE3C,OAAQ,EAAGD,UAAWR,KAF7C,sBAOA,wBACEqD,QAAS,kBACPD,EAAiB,CAAE3C,OAAQ,EAAGD,UAAWR,KAF7C,oBAOA,wBACEqD,QAAS,kBACPD,EAAiB,CAAE3C,OAAQ,IAAKD,UAAWR,KAF/C,2BCtBOsD,G,MAAM,WAAO,IAAD,EACmBlD,mBAAS,CACjDK,OAAQ,EACRD,UAAWR,IAHU,mBAChBG,EADgB,KACDiD,EADC,KAMvB,OACE,sBAAKpB,UAAW/B,EAAhB,UACE,cAAC,EAAD,CAAOE,cAAeA,IACtB,cAAC8C,EAAD,CAAMG,iBAAkBA,SCX9BG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.375f6f74.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nexport const getChartData = ({ precision, period }) => {\r\n  return Axios.get(\r\n    `https://www.fxempire.com/api/v1/en/stocks/chart/candles?Identifier=AAPL.XNAS&IdentifierType=Symbol&AdjustmentMethod=All&IncludeExtended=False&period=${period}&Precision=${precision}&StartTime=8/28/2020%2016:0&EndTime=9/4/2020%2023:59&_fields=ChartBars.StartDate,ChartBars.High,ChartBars.Low,ChartBars.StartTime,ChartBars.Open,ChartBars.Close,ChartBars.Volume`\r\n  ).then(({ data }) => data);\r\n};\r\n\r\nexport const convertToChartData = (dataArray) => {\r\n  const lowArray = [];\r\n  const highArray = [];\r\n  for (const { Date: date, High: high, Low: low } of dataArray) {\r\n    const timeStamp = new Date(date).getTime();\r\n    lowArray.push({ x: timeStamp, y: low });\r\n    highArray.push({ x: timeStamp, y: high });\r\n  }\r\n\r\n  return {\r\n    lowArray,\r\n    highArray,\r\n  };\r\n};\r\n\r\nexport const formatTimeStamp = (timeStamp) => {\r\n  const date = new Date(timeStamp);\r\n  return date.toISOString().substr(11, 5);\r\n};\r\n","export const TimeStamps = {\r\n    MINUETS: \"Minutes\",\r\n    HOURS: \"Hours\"\r\n}\r\n\r\nexport const Styles = {\r\n    TABS: \"tabs\",\r\n    APP: \"app\",\r\n    CHART: \"chart\"\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  getChartData,\r\n  convertToChartData,\r\n  formatTimeStamp,\r\n} from '../../Services/UtilServices';\r\nimport { Styles } from '../../Consts';\r\nimport './_chart.scss';\r\n\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  HorizontalGridLines,\r\n  VerticalGridLines,\r\n  LineSeries,\r\n} from 'react-vis';\r\n\r\nexport const Chart = ({ currTimeStamp }) => {\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getChartData(currTimeStamp)\r\n      .then((data) => setChartData(convertToChartData(data)))\r\n      .catch((error) => console.log(error));\r\n  }, [currTimeStamp]);\r\n\r\n  console.log(chartData);\r\n\r\n  return (\r\n    <div className={Styles.CHART}>\r\n      <XYPlot width={window.innerWidth - 20} height={500}>\r\n        <HorizontalGridLines style={{ stroke: '#D6D6D6' }} />\r\n        <VerticalGridLines style={{ stroke: '#D6D6D6' }} />\r\n        <XAxis\r\n          title=\"Time\"\r\n          style={{\r\n            fontSize: '14px',\r\n          }}\r\n          tickFormat={formatTimeStamp}\r\n          tickLabelAngle={-60}\r\n          totalTicks={chartData.length}\r\n          tickSizeOuter={-20}\r\n          tickPadding={20}\r\n        />\r\n        <YAxis title=\"Value\" />\r\n        <LineSeries\r\n          data={chartData.lowArray}\r\n          style={{\r\n            fill: 'none',\r\n            stroke: 'green',\r\n            strokeWidth: '2px',\r\n          }}\r\n        />\r\n        <LineSeries\r\n          data={chartData.highArray}\r\n          style={{\r\n            fill: 'none',\r\n            stroke: 'red',\r\n            strokeWidth: '2px',\r\n          }}\r\n        />\r\n      </XYPlot>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { TimeStamps, Styles } from '../../Consts';\r\nimport './_tabs.scss';\r\n\r\nexport const Tabs = React.memo(({ setCurrTimeStamp }) => {\r\n  return (\r\n    <div className={Styles.TABS}>\r\n      <button\r\n        onClick={() =>\r\n          setCurrTimeStamp({ period: 1, precision: TimeStamps.MINUETS })\r\n        }\r\n      >\r\n        1 Minute\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          setCurrTimeStamp({ period: 5, precision: TimeStamps.MINUETS })\r\n        }\r\n      >\r\n        5 Minute\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          setCurrTimeStamp({ period: 1, precision: TimeStamps.HOURS })\r\n        }\r\n      >\r\n        1 Hour\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          setCurrTimeStamp({ period: 168, precision: TimeStamps.HOURS })\r\n        }\r\n      >\r\n        1 Week\r\n      </button>\r\n    </div>\r\n  );\r\n});\r\n","import React, { useState } from 'react';\nimport { Chart } from './Components/Chart/Chart';\nimport { Tabs } from './Components/Tabs/Tabs';\nimport { TimeStamps, Styles } from './Consts';\nimport './App.scss';\n\nexport const App = () => {\n  const [currTimeStamp, setCurrTimeStamp] = useState({\n    period: 5,\n    precision: TimeStamps.MINUETS,\n  });\n\n  return (\n    <div className={Styles.APP}>\n      <Chart currTimeStamp={currTimeStamp} />\n      <Tabs setCurrTimeStamp={setCurrTimeStamp} />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}